{% extends "layouts/default.njk" %}

{% block content %}
  <div class="container">
    {% include "layouts/partials/header.njk" %}

    {% import "layouts/macros/nav-macro.njk" as nav %}
    {{nav.active('')}}

    <section class="section__container">
      <h1 class="project__title">Glassbreakers</h1>
      <h2 class="project__subtitle">Brand / Style</h2>
      <section class="project__info">
        <div class="project__info-module">
          <div class="project__info-title">Expertise</div>
          <ul class="project__info-list">
            <li class="project__info-item">Front-end HTML</li>
            <li class="project__info-item">CSS Architecture</li>
            <li class="project__info-item">SVG implementation</li>
          </ul>
        </div>
        <div class="project__info-module">
          <div class="project__info-title">Links</div>
        </div>
      </section>

      <section class="project__block">
        <h3 class="project__block-title">Objective</h3>
        <p>When I joined Glassbreakers, there wasnâ€™t a clear organization of a front-end style guide or code framework. Style definitions, color, and typographical classes consisted of numerous one-off instances. Visual assets were inconsistenly sized, and had multiple versions for a responsive approach.</p>

        <p>The code was turning into spaghetti with many class definitions just with slight variations. The front-end code needed to be organized, codified, and systematic.</p>
      </section>

      <section class="project__block">
        <h3 class="project__block-title">Approach</h3>
        <p>The first step to organize the front-end code was to establish a CSS styling framework using a combination of OOCSS, SMACSS, and BEM. To achieve visual crispness and consistency, we opted to convert all icon assets into vector.</p>

        <p>Our SCSS files were organized to have variables to reduce multiple definitions for colors and typographic variations. Implementing SVG had the advantage of pixel density control as well as the ability to standardize size and color patterns.</p>
      </section>


      <section class="project__block">
        <h3 class="project__block-title">Process</h3>
        <p>The CSS classes were rewritten, and simplified into a repeatable pattern for the engineering team to build upon. Instructions and reference were implemented in the living code <a href="">style guide</a>.</p>

        <p>Icons and UI elements were defined with modifier classes were defined so that the engineering team only had to look up class presets without needing to redefine them in every instance.</p>
      </section>

    </section>

    {% include "layouts/partials/footer.njk" %}
  </div>
{% endblock %}
